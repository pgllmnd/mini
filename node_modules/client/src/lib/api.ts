import axios from 'axios';

// Build a safe base URL from Vite env var or default to localhost
function normalizeApiUrl(raw: string | undefined) {
  const fallback = 'http://localhost:5000/api';
  if (!raw) return fallback;
  // Ensure it has protocol
  let url = raw;
  if (!/^https?:\/\//.test(url)) {
    url = 'https://' + url;
  }
  // Remove trailing slash(es)
  url = url.replace(/\/+$/g, '');
  // If the url ends with /api, keep it; otherwise append /api
  if (!url.endsWith('/api')) url = url + '/api';
  return url;
}

export const API_BASE = normalizeApiUrl(import.meta.env.VITE_API_URL);

const api = axios.create({
  baseURL: API_BASE,
  timeout: 15000,
});

export default api;

// Also export origin (base URL without the /api path) for static assets like avatars
export const API_ORIGIN = (() => {
  // If API_BASE starts with protocol, use URL to get origin, otherwise do string ops
  if (/^https?:\/\//.test(API_BASE)) {
    const u = new URL(API_BASE);
    // If path ends with /api, remove it
    const path = u.pathname.replace(/\/api\/?$/, '');
    return (u.origin + path).replace(/\/+$/g, '');
  }
  // fallback string manipulation
  return API_BASE.replace(/\/+$/g, '').replace(/\/api\/?$/, '');
})();
