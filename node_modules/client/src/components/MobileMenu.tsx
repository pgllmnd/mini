import { useEffect, useRef } from 'react';
import { Link } from 'react-router-dom';

type Props = Readonly<{
	isOpen: boolean;
	onClose: () => void;
	user?: any;
	logout?: () => void;
	toggleTheme?: () => void;
	theme?: string;
	id?: string;
}>;

export default function MobileMenu({ isOpen, onClose, user, logout, toggleTheme, theme, id }: Props) {
	const closeBtnRef = useRef<HTMLButtonElement | null>(null);
	const panelRef = useRef<HTMLElement | null>(null);

	useEffect(() => {
		if (!isOpen) return;

		// focus the close button when menu opens
		closeBtnRef.current?.focus();

		function onKey(e: KeyboardEvent) {
			if (e.key === 'Escape') onClose();
		}

			function onKeyTrap(e: KeyboardEvent) {
				if (e.key !== 'Tab') return;

				const el = panelRef.current;
				if (!el) return;
				const focusable = el.querySelectorAll<HTMLElement>('a[href], button, textarea, input, select, [tabindex]:not([tabindex="-1"])');
				if (!focusable || focusable.length === 0) return;
				const first = focusable[0];
				const last = focusable[focusable.length - 1];

				if (!e.shiftKey && document.activeElement === last) {
					e.preventDefault();
					first.focus();
				} else if (e.shiftKey && document.activeElement === first) {
					e.preventDefault();
					last.focus();
				}
			}

			document.addEventListener('keydown', onKey);
			document.addEventListener('keydown', onKeyTrap);
			return () => {
				document.removeEventListener('keydown', onKey);
				document.removeEventListener('keydown', onKeyTrap);
			};
	}, [isOpen, onClose]);

	if (!isOpen) return null;

	return (
		<div id={id} className="fixed inset-0 z-50 flex">
			{/* Backdrop with fade */}
			<button aria-label="close backdrop" onClick={onClose} className="mobile-menu-backdrop absolute inset-0" />

			{/* Sliding panel */}
			<aside ref={panelRef} className="mobile-menu-panel relative w-72 max-w-full bg-[var(--card)] border-r border-[var(--border)] p-4 shadow-lg">
				<div className="flex items-center justify-between mb-4">
					<h2 className="text-lg font-semibold" style={{ color: 'var(--text-primary)' }}>Menu</h2>
					<button ref={closeBtnRef} onClick={onClose} aria-label="Close menu" className="p-2">
						<span className="material-symbols-outlined">close</span>
					</button>
				</div>

				<nav className="space-y-2">
					<Link to="/" onClick={onClose} className="block px-2 py-2 rounded hover:bg-[var(--surface)]" style={{ color: 'var(--text-primary)' }}>Home</Link>
					<Link to="/questions" onClick={onClose} className="block px-2 py-2 rounded hover:bg-[var(--surface)]" style={{ color: 'var(--text-primary)' }}>Questions</Link>
					<Link to="/tags" onClick={onClose} className="block px-2 py-2 rounded hover:bg-[var(--surface)]" style={{ color: 'var(--text-primary)' }}>Tags</Link>
					<Link to="/users" onClick={onClose} className="block px-2 py-2 rounded hover:bg-[var(--surface)]" style={{ color: 'var(--text-primary)' }}>Users</Link>
					<Link to="/questions/ask" onClick={onClose} className="btn-modern ask-btn block text-left">Ask Question</Link>

					<div className="border-t mt-3 pt-3">
						{user ? (
							<div className="space-y-2">
								<Link to={`/users/${user.username}`} onClick={onClose} className="block px-2 py-2 rounded hover:bg-[var(--surface)]" style={{ color: 'var(--text-primary)' }}>Profile</Link>
								<button onClick={() => { logout?.(); onClose(); }} className="w-full text-left px-2 py-2 rounded hover:bg-[var(--surface)]" style={{ color: 'var(--text-primary)' }}>Logout</button>
							</div>
						) : (
							<div className="space-y-2">
								<Link to="/login" onClick={onClose} className="block px-2 py-2 rounded hover:bg-[var(--surface)]" style={{ color: 'var(--text-primary)' }}>Login</Link>
								<Link to="/register" onClick={onClose} className="block px-2 py-2 rounded hover:bg-[var(--surface)]" style={{ color: 'var(--text-primary)' }}>Register</Link>
							</div>
						)}
					</div>

					<div className="border-t mt-3 pt-3">
						<button onClick={() => { toggleTheme?.(); onClose(); }} className="w-full text-left px-2 py-2 rounded hover:bg-[var(--surface)]" style={{ color: 'var(--text-primary)' }}>
							{theme === 'dark' ? 'Switch to light' : 'Switch to dark'}
						</button>
					</div>
				</nav>
			</aside>
		</div>
	);
}
