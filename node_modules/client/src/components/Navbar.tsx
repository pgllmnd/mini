import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import { useAuth } from '../hooks/useAuth';
import { useTheme } from '../hooks/useTheme';
import { API_ORIGIN } from '../lib/api';
import MobileMenu from './MobileMenu';
import ChatPopup from './ChatPopup';

function Navbar() {
  const { user, logout } = useAuth();
  const { theme, toggleTheme } = useTheme();
  const [mobileOpen, setMobileOpen] = useState(false);
  const [isChatOpen, setIsChatOpen] = useState(false);

  // lock body scroll when mobile menu open
  React.useEffect(() => {
    if (mobileOpen) {
      document.body.style.overflow = 'hidden';
    } else {
      document.body.style.overflow = '';
    }
    return () => { document.body.style.overflow = ''; };
  }, [mobileOpen]);

  return (
    <>
      <nav className="shadow-md" style={{ backgroundColor: 'var(--card)', borderBottom: '1px solid var(--border)' }}>
        <div className="container mx-auto px-4">
          <div className="flex justify-between items-center h-16">
            <div className="flex items-center gap-3">
              <button
                className="lg:hidden p-2"
                aria-label="Open menu"
                aria-expanded={mobileOpen}
                aria-controls="mobile-menu"
                onClick={() => setMobileOpen(true)}
                style={{ color: 'var(--text-secondary)' }}
              >
                <span className="material-symbols-outlined">menu</span>
              </button>

              {/* Mobile-only chat button (near hamburger) */}
              <button
                className="lg:hidden p-2"
                aria-label="Open chat assistant"
                onClick={() => setIsChatOpen(true)}
                style={{ color: 'var(--text-secondary)', marginLeft: 2 }}
              >
                <span className="material-symbols-outlined">chat</span>
              </button>

              <Link to="/" className="text-xl font-bold" style={{ color: 'var(--text-primary)' }}>
                Mini Stack Overflow
              </Link>
            </div>

            <div className="hidden lg:flex items-center space-x-4">
              <button
                onClick={toggleTheme}
                className="p-2"
                aria-label="Toggle theme"
                style={{ color: 'var(--text-secondary)' }}
              >
                <span className="material-symbols-outlined">
                  {theme === 'dark' ? 'light_mode' : 'dark_mode'}
                </span>
              </button>

              <Link
                to="/questions/ask"
                className="btn-modern ask-btn"
              >
                Ask Question
              </Link>

              {user ? (
                <div className="flex items-center space-x-4">
                  <Link 
                    to={`/users/${user.username}`} 
                    className="flex items-center hover:opacity-90"
                  >
                    {user.avatar_url ? (
                      <img 
                        src={`${API_ORIGIN}${user.avatar_url}`}
                        alt={user.username}
                        className="w-8 h-8 md:w-10 md:h-10 rounded-full object-cover border-0 sm:border-2 border-gray-200 dark:border-gray-700 shadow-none md:shadow-sm"
                        onError={(e) => {
                          console.error('Error loading avatar:', e);
                          const target = e.target as HTMLImageElement;
                          target.onerror = null; // Prevent infinite loop
                          target.style.display = 'none';
                          console.log('Avatar URL was:', `${API_ORIGIN}${user.avatar_url}`);
                        }}
                      />
                    ) : (
                      <div 
                        className="w-8 h-8 rounded-full flex items-center justify-center text-white uppercase" 
                        style={{ backgroundColor: 'var(--primary)' }}
                      >
                        {user.username.charAt(0)}
                      </div>
                    )}
                    <span className="ml-2" style={{ color: 'var(--text-secondary)' }}>
                      {user.username}
                    </span>
                  </Link>
                  <button 
                    onClick={logout} 
                    className="hover:underline" 
                    style={{ color: 'var(--text-secondary)' }}
                  >
                    Logout
                  </button>
                </div>
              ) : (
                <div className="flex items-center space-x-4">
                  <Link 
                    to="/login" 
                    className="hover:underline" 
                    style={{ color: 'var(--text-secondary)' }}
                  >
                    Login
                  </Link>
                  <Link 
                    to="/register" 
                    className="hover:underline" 
                    style={{ color: 'var(--text-secondary)' }}
                  >
                    Register
                  </Link>
                </div>
              )}
            </div>
          </div>
        </div>
      </nav>

      <MobileMenu
        isOpen={mobileOpen}
        onClose={() => setMobileOpen(false)}
        user={user}
        logout={logout}
        toggleTheme={toggleTheme}
        theme={theme}
        id="mobile-menu"
      />

      {/* Mobile floating Ask button */}
      <Link to="/questions/ask" className="fab-ask lg:hidden">
        <button className="px-4 py-3 bg-[var(--primary)] text-white rounded-full ask-btn">
          <span className="material-symbols-outlined align-middle">edit</span>
        </button>
      </Link>

  {/* Chat Popup (mobile trigger) */}
  <ChatPopup isOpen={isChatOpen} onClose={() => setIsChatOpen(false)} />
    </>
  );
}

export default Navbar;