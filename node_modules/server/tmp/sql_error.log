--- getQuestions request at 2025-08-26T11:46:32.675Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-26T11:46:32.677Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-26T11:46:34.214Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-26T11:46:34.216Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-26T11:46:53.203Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-26T11:46:53.204Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-26T11:46:54.577Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-26T11:46:54.578Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-26T11:47:11.670Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-26T11:47:11.671Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-26T11:50:16.759Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-26T11:50:16.762Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-26T12:02:20.992Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-26T12:02:20.997Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-26T12:02:22.917Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-26T12:02:22.925Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-26T12:02:28.739Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-26T12:02:28.743Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-26T12:02:29.085Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-26T12:02:29.088Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-26T12:06:30.654Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-26T12:06:30.657Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-26T12:06:31.971Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-26T12:06:31.972Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-26T12:09:34.247Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-26T12:09:34.249Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-26T12:09:35.763Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-26T12:09:35.764Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-26T12:58:22.911Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-26T12:58:22.913Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-26T12:58:25.601Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-26T12:58:25.604Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-26T14:50:15.993Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-26T14:50:15.998Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-26T14:50:18.223Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-26T14:50:18.226Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-26T14:50:32.597Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-26T14:50:32.599Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-26T14:50:47.499Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-26T14:50:47.502Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-26T14:51:14.042Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-26T14:51:14.043Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-26T14:51:15.653Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-26T14:51:15.656Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-27T09:43:25.880Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-27T09:43:25.882Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-27T09:43:27.292Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-27T09:43:27.294Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-27T09:46:01.361Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-27T09:46:01.362Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-27T09:46:02.854Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-27T09:46:02.856Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-27T09:46:27.164Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-27T09:46:27.171Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-27T09:46:28.621Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-27T09:46:28.629Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-27T09:48:13.203Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-27T09:48:13.204Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-27T09:48:14.683Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-27T09:48:14.686Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-27T09:51:44.176Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-27T09:51:44.179Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-27T09:51:46.510Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-27T09:51:46.514Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-27T09:52:46.912Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-27T09:52:46.915Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-27T09:52:48.600Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-27T09:52:48.603Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-27T11:03:27.455Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-27T11:03:27.460Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-27T11:03:28.986Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-27T11:03:28.987Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-27T11:12:54.720Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-27T11:12:54.722Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-27T11:16:37.262Z ---
SORT: newest
RAW_SEARCH: api

--- getQuestions SQL at 2025-08-27T11:16:37.265Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     WHERE (q.title ILIKE $1 OR q.content ILIKE $1) GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:["%api%"]

--- getQuestions request at 2025-08-27T11:18:46.708Z ---
SORT: newest
RAW_SEARCH: api

--- getQuestions SQL at 2025-08-27T11:18:46.711Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     WHERE (q.title ILIKE $1 OR q.content ILIKE $1) GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:["%api%"]

--- getQuestions request at 2025-08-27T11:18:53.696Z ---
SORT: newest
RAW_SEARCH: api

--- getQuestions SQL at 2025-08-27T11:18:53.697Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     WHERE (q.title ILIKE $1 OR q.content ILIKE $1) GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:["%api%"]

--- getQuestions request at 2025-08-27T11:20:08.696Z ---
SORT: newest
RAW_SEARCH: api

--- getQuestions SQL at 2025-08-27T11:20:08.698Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     WHERE (q.title ILIKE $1 OR q.content ILIKE $1) GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:["%api%"]

--- getQuestions request at 2025-08-27T11:20:10.039Z ---
SORT: newest
RAW_SEARCH: api

--- getQuestions SQL at 2025-08-27T11:20:10.040Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     WHERE (q.title ILIKE $1 OR q.content ILIKE $1) GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:["%api%"]

--- getQuestions request at 2025-08-27T11:21:13.723Z ---
SORT: newest
RAW_SEARCH: api

--- getQuestions SQL at 2025-08-27T11:21:13.723Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     WHERE (q.title ILIKE $1 OR q.content ILIKE $1) GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:["%api%"]

--- getQuestions request at 2025-08-27T11:23:00.703Z ---
SORT: newest
RAW_SEARCH: api

--- getQuestions SQL at 2025-08-27T11:23:00.704Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     WHERE (q.title ILIKE $1 OR q.content ILIKE $1) GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:["%api%"]

--- getQuestions request at 2025-08-27T11:23:09.425Z ---
SORT: votes
RAW_SEARCH: api

--- getQuestions SQL at 2025-08-27T11:23:09.426Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     WHERE (q.title ILIKE $1 OR q.content ILIKE $1) GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY (COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') - 
                           COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN')) DESC
VALUES:["%api%"]

--- getQuestions request at 2025-08-27T11:23:16.235Z ---
SORT: newest
RAW_SEARCH: api

--- getQuestions SQL at 2025-08-27T11:23:16.235Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     WHERE (q.title ILIKE $1 OR q.content ILIKE $1) GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:["%api%"]

--- getQuestions request at 2025-08-27T11:23:22.961Z ---
SORT: answers
RAW_SEARCH: api

--- getQuestions SQL at 2025-08-27T11:23:22.962Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     WHERE (q.title ILIKE $1 OR q.content ILIKE $1) GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY answer_count DESC
VALUES:["%api%"]

--- getQuestions request at 2025-08-27T11:23:37.382Z ---
SORT: newest
RAW_SEARCH: api

--- getQuestions SQL at 2025-08-27T11:23:37.383Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     WHERE (q.title ILIKE $1 OR q.content ILIKE $1) GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:["%api%"]

--- getQuestions request at 2025-08-27T11:23:38.817Z ---
SORT: newest
RAW_SEARCH: api

--- getQuestions SQL at 2025-08-27T11:23:38.820Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     WHERE (q.title ILIKE $1 OR q.content ILIKE $1) GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:["%api%"]

--- getQuestions request at 2025-08-27T11:23:41.092Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-27T11:23:41.092Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-27T11:23:46.236Z ---
SORT: votes
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-27T11:23:46.236Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY (COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') - 
                           COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN')) DESC
VALUES:[]

--- getQuestions request at 2025-08-27T11:27:32.804Z ---
SORT: votes
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-27T11:27:32.805Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY (COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') - 
                           COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN')) DESC
VALUES:[]

--- getQuestions request at 2025-08-27T11:28:12.477Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-27T11:28:12.478Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-27T11:28:13.842Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-27T11:28:13.844Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

--- getQuestions request at 2025-08-27T11:29:11.739Z ---
SORT: newest
RAW_SEARCH: 

--- getQuestions SQL at 2025-08-27T11:29:11.741Z ---
QUERY:

      SELECT 
        q.*,
        u.username as author_username,
        COUNT(DISTINCT a.id) as answer_count,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'UP') as upvotes,
        COUNT(DISTINCT v.id) FILTER (WHERE v.type = 'DOWN') as downvotes,
        array_agg(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM "public"."questions" q
      LEFT JOIN "public"."users" u ON q.author_id = u.id
      LEFT JOIN "public"."answers" a ON q.id = a.question_id
      LEFT JOIN "public"."votes" v ON q.id = v.question_id
      LEFT JOIN "public"."_QuestionToTag" qt ON q.id = qt."A"
      LEFT JOIN "public"."tags" t ON qt."B" = t.id
     GROUP BY q.id, q.title, q.content, q.created_at, q.updated_at, q.author_id, q.views, u.username ORDER BY q.created_at DESC
VALUES:[]

